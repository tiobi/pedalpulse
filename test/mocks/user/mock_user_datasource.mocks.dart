// Mocks generated by Mockito 5.4.2 from annotations
// in pedalpulse/test/mocks/user/mock_user_datasource.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:dartz/dartz.dart' as _i3;
import 'package:flutter_image_compress/flutter_image_compress.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;
import 'package:pedalpulse/features/user/data/datasources/user_datasource.dart'
    as _i4;
import 'package:pedalpulse/features/user/data/models/user_model.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUserModel_0 extends _i1.SmartFake implements _i2.UserModel {
  _FakeUserModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUnit_1 extends _i1.SmartFake implements _i3.Unit {
  _FakeUnit_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [UserDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserDataSource extends _i1.Mock implements _i4.UserDataSource {
  @override
  _i5.Future<_i2.UserModel> getUser({required String? uid}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUser,
          [],
          {#uid: uid},
        ),
        returnValue: _i5.Future<_i2.UserModel>.value(_FakeUserModel_0(
          this,
          Invocation.method(
            #getUser,
            [],
            {#uid: uid},
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i2.UserModel>.value(_FakeUserModel_0(
          this,
          Invocation.method(
            #getUser,
            [],
            {#uid: uid},
          ),
        )),
      ) as _i5.Future<_i2.UserModel>);

  @override
  _i5.Future<_i2.UserModel> updateUser({required _i2.UserModel? userModel}) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUser,
          [],
          {#userModel: userModel},
        ),
        returnValue: _i5.Future<_i2.UserModel>.value(_FakeUserModel_0(
          this,
          Invocation.method(
            #updateUser,
            [],
            {#userModel: userModel},
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i2.UserModel>.value(_FakeUserModel_0(
          this,
          Invocation.method(
            #updateUser,
            [],
            {#userModel: userModel},
          ),
        )),
      ) as _i5.Future<_i2.UserModel>);

  @override
  _i5.Future<List<String>> getUserLikes({required String? userUid}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserLikes,
          [],
          {#userUid: userUid},
        ),
        returnValue: _i5.Future<List<String>>.value(<String>[]),
        returnValueForMissingStub: _i5.Future<List<String>>.value(<String>[]),
      ) as _i5.Future<List<String>>);

  @override
  _i5.Future<_i3.Unit> addUserLike({
    required String? userUid,
    required String? postUid,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addUserLike,
          [],
          {
            #userUid: userUid,
            #postUid: postUid,
          },
        ),
        returnValue: _i5.Future<_i3.Unit>.value(_FakeUnit_1(
          this,
          Invocation.method(
            #addUserLike,
            [],
            {
              #userUid: userUid,
              #postUid: postUid,
            },
          ),
        )),
        returnValueForMissingStub: _i5.Future<_i3.Unit>.value(_FakeUnit_1(
          this,
          Invocation.method(
            #addUserLike,
            [],
            {
              #userUid: userUid,
              #postUid: postUid,
            },
          ),
        )),
      ) as _i5.Future<_i3.Unit>);

  @override
  _i5.Future<_i3.Unit> removeUserLike({
    required String? userUid,
    required String? postUid,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeUserLike,
          [],
          {
            #userUid: userUid,
            #postUid: postUid,
          },
        ),
        returnValue: _i5.Future<_i3.Unit>.value(_FakeUnit_1(
          this,
          Invocation.method(
            #removeUserLike,
            [],
            {
              #userUid: userUid,
              #postUid: postUid,
            },
          ),
        )),
        returnValueForMissingStub: _i5.Future<_i3.Unit>.value(_FakeUnit_1(
          this,
          Invocation.method(
            #removeUserLike,
            [],
            {
              #userUid: userUid,
              #postUid: postUid,
            },
          ),
        )),
      ) as _i5.Future<_i3.Unit>);

  @override
  _i5.Future<_i3.Unit> deleteUser({required String? uid}) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteUser,
          [],
          {#uid: uid},
        ),
        returnValue: _i5.Future<_i3.Unit>.value(_FakeUnit_1(
          this,
          Invocation.method(
            #deleteUser,
            [],
            {#uid: uid},
          ),
        )),
        returnValueForMissingStub: _i5.Future<_i3.Unit>.value(_FakeUnit_1(
          this,
          Invocation.method(
            #deleteUser,
            [],
            {#uid: uid},
          ),
        )),
      ) as _i5.Future<_i3.Unit>);

  @override
  _i5.Future<_i3.Unit> updateUserProfileImage({
    required String? uid,
    _i6.XFile? profileImage,
    _i6.XFile? coverImage,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUserProfileImage,
          [],
          {
            #uid: uid,
            #profileImage: profileImage,
            #coverImage: coverImage,
          },
        ),
        returnValue: _i5.Future<_i3.Unit>.value(_FakeUnit_1(
          this,
          Invocation.method(
            #updateUserProfileImage,
            [],
            {
              #uid: uid,
              #profileImage: profileImage,
              #coverImage: coverImage,
            },
          ),
        )),
        returnValueForMissingStub: _i5.Future<_i3.Unit>.value(_FakeUnit_1(
          this,
          Invocation.method(
            #updateUserProfileImage,
            [],
            {
              #uid: uid,
              #profileImage: profileImage,
              #coverImage: coverImage,
            },
          ),
        )),
      ) as _i5.Future<_i3.Unit>);
}
