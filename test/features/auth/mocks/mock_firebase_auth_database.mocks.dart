// Mocks generated by Mockito 5.4.2 from annotations
// in pedalpulse/test/features/auth/mocks/mock_firebase_auth_database.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:pedalpulse/core/entities/user_entity.dart' as _i3;
import 'package:pedalpulse/features/auth/data/datasources/firebase_auth_datasource.dart'
    as _i4;
import 'package:pedalpulse/features/auth/domain/entities/auth_entity.dart'
    as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUnit_0 extends _i1.SmartFake implements _i2.Unit {
  _FakeUnit_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserEntity_1 extends _i1.SmartFake implements _i3.UserEntity {
  _FakeUserEntity_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [FirebaseAuthDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseAuthDatabase extends _i1.Mock
    implements _i4.FirebaseAuthDataSource {
  MockFirebaseAuthDatabase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.Unit> signUpWithEmailAndPassword(
          {required _i6.AuthEntity? authEntity}) =>
      (super.noSuchMethod(
        Invocation.method(
          #signUpWithEmailAndPassword,
          [],
          {#authEntity: authEntity},
        ),
        returnValue: _i5.Future<_i2.Unit>.value(_FakeUnit_0(
          this,
          Invocation.method(
            #signUpWithEmailAndPassword,
            [],
            {#authEntity: authEntity},
          ),
        )),
      ) as _i5.Future<_i2.Unit>);

  @override
  _i5.Future<_i3.UserEntity> signInWithEmailAndPassword(
          {required _i6.AuthEntity? authEntity}) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithEmailAndPassword,
          [],
          {#authEntity: authEntity},
        ),
        returnValue: _i5.Future<_i3.UserEntity>.value(_FakeUserEntity_1(
          this,
          Invocation.method(
            #signInWithEmailAndPassword,
            [],
            {#authEntity: authEntity},
          ),
        )),
      ) as _i5.Future<_i3.UserEntity>);

  @override
  _i5.Future<_i2.Unit> sendEmailVerification({required String? email}) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendEmailVerification,
          [],
          {#email: email},
        ),
        returnValue: _i5.Future<_i2.Unit>.value(_FakeUnit_0(
          this,
          Invocation.method(
            #sendEmailVerification,
            [],
            {#email: email},
          ),
        )),
      ) as _i5.Future<_i2.Unit>);

  @override
  _i5.Future<_i2.Unit> initializeUserData({
    required String? uid,
    required String? email,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #initializeUserData,
          [],
          {
            #uid: uid,
            #email: email,
          },
        ),
        returnValue: _i5.Future<_i2.Unit>.value(_FakeUnit_0(
          this,
          Invocation.method(
            #initializeUserData,
            [],
            {
              #uid: uid,
              #email: email,
            },
          ),
        )),
      ) as _i5.Future<_i2.Unit>);

  @override
  _i5.Future<_i2.Unit> sendPasswordResetEmail({required String? email}) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendPasswordResetEmail,
          [],
          {#email: email},
        ),
        returnValue: _i5.Future<_i2.Unit>.value(_FakeUnit_0(
          this,
          Invocation.method(
            #sendPasswordResetEmail,
            [],
            {#email: email},
          ),
        )),
      ) as _i5.Future<_i2.Unit>);

  @override
  _i5.Future<_i2.Unit> signOut() => (super.noSuchMethod(
        Invocation.method(
          #signOut,
          [],
        ),
        returnValue: _i5.Future<_i2.Unit>.value(_FakeUnit_0(
          this,
          Invocation.method(
            #signOut,
            [],
          ),
        )),
      ) as _i5.Future<_i2.Unit>);

  @override
  _i5.Future<bool> isEmailVerified({required String? email}) =>
      (super.noSuchMethod(
        Invocation.method(
          #isEmailVerified,
          [],
          {#email: email},
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
}
